--- 
import CmsSidebar from '../../components/Sidebar.astro';
import CmsHeader from '../../components/Header.astro';

import '../../styles/dashboard.css';
 
export const prerender = false;

export async function getStaticPaths() {
  return [];
} 
const { id } = Astro.params;
let article = {};
let categories = []; 
if (id) {
     
  const res = await fetch(`http://localhost:8080/article?id=${id}&size=10&page=0`);
  const data = await res.json();
  article = data.articleSummaryList[0];
   
  const categoriesRes = await fetch("http://localhost:8080/category");
  categories = await categoriesRes.json();
  console.log(categories);
} 
--- 
<!DOCTYPE html>
<html lang="en">
  <head> 
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CMS Article Edit</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" />
    <link rel="stylesheet" href="https://cdn.quilljs.com/1.3.6/quill.snow.css">
  </head>
  <body>
    <div class="container"> 
      <CmsSidebar />
      <CmsHeader />

      <div class="main-content" data-category-id={id}>
  
      <div class="page-title">
        <div class="title">Article Edit</div> 
      </div>  
 
      <div class="article-title-box">
        <label for="articleTitle">Title</label>
        <input type="text" id="articleTitle" value={article?.title || ""} placeholder="Enter article title..." />
      </div>

      <div class="article-title-box">
        <label for="articleCategory">Category</label>
        <select id="articleCategory">
          <option value="">Select category...</option>
          {categories.map(cat => (
            <option value={cat.id} selected={article?.categoryId === cat.id}>{cat.name}</option>
          ))}
        </select>
      </div>
  
      <div id="editor-container" style="height:400px;" set:html={article?.content}></div> 
      
      <div class="action-buttons"> 
          <button id="btnSave" class="btn btn-primary">
              <i class="fas fa-plus"></i>
              Edit
          </button> 
      </div> 

    <script is:raw>
      document.addEventListener("DOMContentLoaded", () => {
        const script = document.createElement("script");
        script.src = "https://cdn.quilljs.com/1.3.6/quill.js";
        script.onload = async () => {
          const quill = new Quill("#editor-container", {
            theme: "snow",
            modules: {
              toolbar: [
                ["bold", "italic", "underline", "strike"],
                ["blockquote", "code-block"],
                [{ header: 1 }, { header: 2 }],
                [{ list: "ordered" }, { list: "bullet" }],
                [{ script: "sub" }, { script: "super" }],
                [{ indent: "-1" }, { indent: "+1" }],
                [{ direction: "rtl" }],
                [{ size: ["small", false, "large", "huge"] }],
                [{ header: [1, 2, 3, 4, 5, 6, false] }],
                [{ color: [] }, { background: [] }],
                [{ font: [] }],
                [{ align: [] }],
                ["clean"],
                ["link", "image", "video"]
              ]
            }
          });
    
          const btn = document.getElementById("btnSave");
          const titleInput = document.getElementById("articleTitle");
          const categorySelect = document.getElementById("articleCategory");
          

          btn.addEventListener("click", async () => {
            const title = titleInput.value.trim();
            const categoryId = categorySelect.value;
            const content = quill.root.innerHTML; 
            const container = document.querySelector(".main-content"); 
            const articleId = container.dataset.categoryId;    

            if (!title || !categoryId || !content) {
              alert("All fields are required!");
              return;
            }

            try {
              const res = await fetch(`http://localhost:8080/article/${articleId}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                  title,
                  content,
                  categoryId,
                  updatedBy: "admin" // veya giriş yapan kullanıcıdan dinamik alabilirsin
                })
              });

              if (!res.ok) throw new Error(await res.text());

              alert("Article updated successfully!");
              window.location.href = "/article";
            } catch (err) {
              alert("Error: " + err.message);
            }
          });
        };

        document.body.appendChild(script);
      });
    </script>
  </body>
</html>