--- 
import CmsSidebar from '../../../components/CmsSidebar.astro';
import CmsHeader from '../../../components/CmsHeader.astro';

import '../../../styles/dashboard.css';    
import '../../../styles/cms-article-edit.css';
--- 
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CMS Panel</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" /> 
    <link rel="stylesheet" href="https://cdn.quilljs.com/1.3.6/quill.snow.css">
  </head>
  <body>
    <div class="container"> 
      <CmsSidebar />
      <CmsHeader />

      <div class="main-content">
  
        <div class="page-title">
          <div class="title">Article Add</div> 
        </div>

        <div class="article-title-box">
          <label for="articleTitle">Title</label>
          <input type="text" id="articleTitle" placeholder="Enter article title..." />
        </div>

        <div class="article-title-box">
            <label for="articleCategory">Category</label>
            <select id="articleCategory">
            <option value="">Loading categories...</option>
            </select>
        </div>

        <div id="editor-container" style="height:400px;"></div>

        <div class="action-buttons"> 
            <button id="btnSave" class="btn btn-primary">
                <i class="fas fa-plus"></i>
                Save
            </button>
        </div> 
      </div>

      <script is:raw> 
        document.addEventListener("DOMContentLoaded", () => {
          const script = document.createElement("script");
          script.src = "https://cdn.quilljs.com/1.3.6/quill.js";
          script.onload = async () => {
            var quill = new Quill("#editor-container", {
              theme: "snow",
              modules: {
                toolbar: [
                  ["bold", "italic", "underline", "strike"],
                  ["blockquote", "code-block"],
                  [{ header: 1 }, { header: 2 }],
                  [{ list: "ordered" }, { list: "bullet" }],
                  [{ script: "sub" }, { script: "super" }],
                  [{ indent: "-1" }, { indent: "+1" }],
                  [{ direction: "rtl" }],
                  [{ size: ["small", false, "large", "huge"] }],
                  [{ header: [1, 2, 3, 4, 5, 6, false] }],
                  [{ color: [] }, { background: [] }],
                  [{ font: [] }],
                  [{ align: [] }],
                  ["clean"],
                  ["link", "image", "video"]
                ]
              }
            });

            const btn = document.getElementById("btnSave");
            const titleInput = document.getElementById("articleTitle");
            const categorySelect = document.getElementById("articleCategory");
 
            try {
              const categoryRes = await fetch("http://localhost:8080/category");
              const categories = await categoryRes.json();

              categorySelect.innerHTML = '<option value="">Select category...</option>';
              categories.forEach(cat => {
                const option = document.createElement("option");
                option.value = cat.id;
                option.textContent = cat.name;
                categorySelect.appendChild(option);
              });
            } catch (err) {
              categorySelect.innerHTML = '<option value="">Error loading categories</option>';
              console.error("Error loading categories:", err);
            }

            btn.addEventListener("click", async () => {
              const title = titleInput.value.trim();
              const content = quill.root.innerHTML.trim();
              const categoryId = categorySelect.value;
              const createdBy = '49001';

              if (!title || !content || !categoryId) {
                alert("Title, category and content cannot be empty!");
                return;
              }

              try {
                const res = await fetch("http://localhost:8080/article", {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({ title, content, categoryId, createdBy })
                });

                if (!res.ok) throw new Error(await res.text());

                alert("Article added successfully!");
                titleInput.value = "";
                quill.setText("");
                categorySelect.selectedIndex = 0;
              } catch (err) {
                alert("Error: " + err.message);
              }
            });
          };
          document.body.appendChild(script);
        });
      </script>
  </body>
</html>